Minimum Depth of Binary Tree 
Given a binary tree, find its minimum depth.

The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.



[cpp] view plaincopy
/** 
 * Definition for binary tree 
 * struct TreeNode { 
 *     int val; 
 *     TreeNode *left; 
 *     TreeNode *right; 
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {} 
 * }; 
 */  
class Solution {  
public:  
    int minDepth(TreeNode *root) {  
        if(root == NULL) return 0;  
        if(root->left != NULL && root ->right != NULL)  
        {  
            int left = 1 + minDepth(root->left);  
            int right = 1 + minDepth(root->right);  
            return min(left,right);  
        }  
        else if(root->left != NULL && root->right == NULL)  
            return 1 + minDepth(root->left);  
        else if(root->left == NULL && root->right != NULL)  
            return 1 + minDepth(root->right);  
        return 1;  
    }  
};  
